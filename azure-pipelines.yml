trigger:
  - main  # Trigger the pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Step 1: Checkout code
  - task: Checkout@1
    inputs:
      clean: true

  # Step 2: Login to Docker Hub
  - task: Docker@2
    inputs:
      command: 'login'
      containerRegistry: 'docker-hub-connection'  # Ensure this matches the name of your Docker Hub connection

  # Step 3: Build and push the Docker image
  - task: Docker@2
    inputs:
      command: 'buildAndPush'  # Combine build and push into one task
      dockerfile: '**/Dockerfile'  # Path to your Dockerfile
      buildContext: $(Build.SourcesDirectory)  # Root of your repo
      tags: 'nexusameer/dev-search:$(Build.BuildId)'  # Use build ID as the tag

  # Step 4: Run the container and deploy Django
  - task: Docker@2
    inputs:
      command: 'run'
      containerName: 'django-container'
      imageName: 'nexusameer/dev-search:$(Build.BuildId)'  # Tag used in the build step
      options: '--rm -v $(System.DefaultWorkingDirectory):/app -w /app'
      ports: '8000:8000'
      detach: true  # Ensure it runs in the background

  # Step 5: Install dependencies and run tests
  - script: |
      docker exec django-container python -m pip install --upgrade pip
      docker exec django-container pip install -r requirements.txt
    displayName: 'Install dependencies inside container'

  - script: |
      docker exec django-container python manage.py migrate
      docker exec django-container python manage.py collectstatic --noinput
      docker exec django-container python manage.py test
    displayName: 'Run migrations, collect static files, and run tests'

  # Step 6: Publish Test Results (if any)
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/TEST-*.xml'
      testRunTitle: 'Django Tests in Docker'
    condition: succeededOrFailed()
